@import "styles/functions.scss";
@import "styles/includeMedia.scss";

$prefixes: -webkit-, -moz-, -ms-, -o-;

@mixin crossBrowserPrefix($property, $value) {
    @each $prefix in $prefixes {
        #{$prefix}#{$property}: $value;
    }
    #{$property}: $value;
}

// Takes font weight, minumum and maximum font size and creates a mixin with dynamic font properties.
@mixin typeFace($minValue, $maxValue, $fontWeight) {
    $font-size: fluid($minValue, $maxValue);
    font-size: $font-size;
    line-height: calculate-line-height($font-size);
    letter-spacing: countLetterSpacing($font-size);
    font-weight: $fontWeight;

    @include media(">1366px") {
        $font-size: #{$maxValue}px;
        font-size: $font-size;
        line-height: calculate-line-height($font-size);
        letter-spacing: countLetterSpacing($font-size);
    }
}

// Common keyframes for opacity
@mixin opacityKeyFrames($opacity: 1) {
    @keyframes show {
        from {
            opacity: 0;
        }

        to {
            @if $opacity == 1 {
                opacity: 1;
            } @else {
                opacity: $opacity;
            }
        }
    }
    @keyframes hide {
        from {
            @if $opacity == 1 {
                opacity: 1;
            } @else {
                opacity: $opacity;
            }
        }

        to {
            opacity: 0;
        }
    }
}

// Takes CSS property name, minimum and maximum value for dynamic property value based on viewport
@mixin fluidDimension($property, $minValue, $maxValue) {
    #{$property}: fluid($minValue, $maxValue);
}

// Returns image properties for the given size.
@mixin imgProperties($size) {
    width: $size;
    height: $size;
    object-fit: contain;
}

// Returns animation properties for the given name and time.
@mixin animation($name, $time) {
    animation-name: $name;
    animation-duration: $time;
    animation-fill-mode: forwards;
}

@mixin blockquoteDesktopCSS() {
    blockquote {
        width: 68%;
        margin-left: auto;

        &::before {
            position: absolute;
            left: 5%;
            margin-top: 1rem;
            width: 100px;
            height: 70px;
        }

        p:first-child::before {
            content: "";
            position: absolute;
            margin-left: -10%;
            height: 115px;
            border: none;
            border-right: 3px solid $grey;
            margin-top: -20px;
        }
    }
}

@mixin blockquoteTabletCSS() {
    blockquote::before {
        width: 100px;
        height: 70px;
        border-bottom: 3px solid $light-grey;
        background-position-y: -5px;
    }
}
